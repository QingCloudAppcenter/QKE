---
- name: install packages required by kubelet
  apt:
    name: [ 'conntrack', 'socat' ]
    state: present
    update_cache: no

- name: install cni
  include_role:
    name: install-1.0.5
  vars:
    opts:
      pkg_name: cni
      pkg_version: "{{ cni_version }}"
      pkg_url: https://github.com/containernetworking/plugins/releases/download/v{{ cni_version }}/cni-plugins-amd64-v{{ cni_version }}.tgz
      pkg_type: tgz
      extracts: yes
      extra_opts: []
      creates: vlan
      bin_links:
      - src: ''
        dest: /opt/cni/bin

- name: install crictl
  include_role:
    name: install-1.0.5
  vars:
    opts:
      pkg_name: crictl
      pkg_version: "{{ cri_version }}"
      pkg_url: https://github.com/kubernetes-sigs/cri-tools/releases/download/v{{ cri_version }}/crictl-v{{ cri_version }}-linux-amd64.tar.gz
      pkg_type: tgz
      extracts: yes
      extra_opts: []
      creates: crictl
      bin_links:
      - src: crictl

- name: install k8s
  include_role:
    name: install-1.0.5
  vars:
    opts:
      pkg_name: k8s-node
      pkg_version: "{{ k8s_version }}"
      pkg_url: https://dl.k8s.io/v{{ k8s_version }}/kubernetes-node-linux-amd64.tar.gz
      pkg_type: tgz
      extracts: yes
      creates: kubelet
      bin_links:
      - src: node/bin/kubeadm
      - src: node/bin/kubectl
      - src: node/bin/kubelet

- name: kubectl completion bash
  shell:
    kubectl completion bash > /etc/profile.d/kubectl-completion.sh

- name: install app files
  copy:
    src: "{{ role_path }}/files/{{ dir_path }}"
    dest: /{{ dir_path }}
    owner: root
    group: root
    mode: preserve
  loop:
  - opt/app/
  loop_control:
    loop_var: dir_path

- name: create images links
  include_tasks: generate_dockerfs_links.yml

- name: k8s network requirements
  modprobe:
    name: br_netfilter
    state: present
