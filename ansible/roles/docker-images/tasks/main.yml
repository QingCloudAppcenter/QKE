---
- name: set vars
  set_fact:
    src_path: "/tmp"
    local_path: "{{ local_images_path }}"

- name: Check that the src_ks_image_package exists
  stat:
    path: "{{ src_path }}/{{ ks_images_package }}"
  register: src_ks_result

- name: Check that the src_k8s_image_package exists
  stat:
    path: "{{ src_path }}/{{ k8s_images_package }}"
  register: src_k8s_result

- name: Check that the local_ks_image_package exists
  stat:
    path: "{{ local_path }}/{{ ks_images_package }}"
  register: local_ks_result
  delegate_to: localhost

- name: Check that the local_k8s_image_package exists
  stat:
    path: "{{ local_path }}/{{ k8s_images_package }}"
  register: local_k8s_result
  delegate_to: localhost

- name: set image package variable
  set_fact:
    src_exists: src_k8s_result.stat.exists and src_ks_result.stat.exists
    local_exists: local_k8s_result.stat.exists and local_ks_result.stat.exists

- name: start docker service
  systemd:
    name: docker
    masked: no
    state: started

- name: install pip3
  apt:
    name: python3-pip
    update_cache: yes

- name: install docker.py
  pip:
    executable: pip3
    name: docker.py

- name: pull k8s images
  docker_image: 
    source: pull
    name: "{{ image_name }}"
  loop:
    "{{ docker_images_k8s }}"
  loop_control:
    loop_var: image_name
  when: "{{ src_exists }} == False and {{ local_exists }} == False"

- name: pull ks images
  docker_image: 
    source: pull
    name: "{{ image_name }}"
  loop:
    "{{ docker_images_ks }}"
  loop_control:
    loop_var: image_name
  when: "{{ src_exists }} == False and {{ local_exists }} == False"

- name: prepare images packages
  shell: docker save -o "{{ src_path }}"/"{{ image_package.package_name }}" "{{ image_package.images_names | join(" ") }}"
  loop:
    - package_name: "{{ ks_images_package }}"
      images_names: "{{ docker_images_ks }}"
    - package_name: "{{ k8s_images_package }}"
      images_names: "{{ docker_images_k8s }}"
  loop_control:
    loop_var: image_package
  when: "{{ src_exists }} == False and {{ local_exists }} == False"

- name: stop docker service
  systemd:
    name: docker
    masked: no
    state: stopped

- name: prepare tmp dir
  file:
    path: "{{ local_path }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  delegate_to: localhost

- name: fetch images
  synchronize:
    src: "{{ src_path }}/{{ image_package }}"
    dest: "{{ local_path }}/{{ image_package }}"
    mode: pull
  delegate_to: localhost
  loop:
    - "{{ ks_images_package }}"
    - "{{ k8s_images_package }}"
  loop_control:
    loop_var: image_package
  when: "{{ local_exists }} == False"
