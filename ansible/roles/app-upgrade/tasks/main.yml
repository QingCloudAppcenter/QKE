---
- name: copy binaries
  copy:
    src: "{{ role_path }}/files/opt/app/"
    dest: /opt/app/
    owner: root
    group: svc
    mode: preserve
    directory_mode: u=rwx,g=rx,o=

- name: create filesystem on attached volume
  filesystem:
    fstype: ext4
    dev: /dev/vdc

- name: mount the volume for upgrade
  mount:
    path: /upgrade
    src: /dev/vdc
    fstype: ext4
    state: mounted

- name: remove lost+found
  file:
    path: /upgrade/lost+found
    state: absent

- name: prepare dirs
  file:
    path: "{{ upgrade_path }}"
    state: directory
  loop:
    - /upgrade/vm-files
    - /upgrade/docker-images
  loop_control:
    loop_var: upgrade_path

- name: copy vm files
  shell: rsync -aAXR {{ snapshot_sources | join(' ') }} /upgrade/vm-files

- name: copy images package 
  synchronize:
    src: "{{ local_images_path }}/{{ image_package }}"
    dest: "/upgrade/docker-images/{{ image_package }}"
  delegate_to: localhost
  when: "'k8s-node' in group_names"
  loop:
    - "{{ ks_images_package }}"
    - "{{ k8s_images_package }}"
  loop_control:
    loop_var: image_package

- name: start docker service
  systemd:
    name: docker
    masked: no
    state: started
  when: "'k8s-node' in group_names"

- name: load images
  shell: docker load -qi /upgrade/docker-images/ks.tgz;docker load -qi /upgrade/docker-images/k8s.tgz
  when: "'k8s-node' in group_names"

- name: stop docker service
  systemd:
    name: docker
    masked: no
    state: stopped
  when: "'k8s-node' in group_names"

- name: create images links
  include_tasks: generate_dockerfs_links.yml
  when: "'k8s-node' in group_names"
 
- name: unmount the volume for upgrade
  mount:
    path: /upgrade
    state: absent
