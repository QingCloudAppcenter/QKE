{{- $ipDigits := split (getv "/host/ip") "." }}
{{- $hostnicCidr := printf "%s.%s.0.0/16" (index $ipDigits 0) (index $ipDigits 1) }}

{{ if (exists "/links/etcd_service/env/etcd_node/enable_TLS") }}
{{ if (eq (getv "/links/etcd_service/env/etcd_node/enable_TLS") "true") }}
flush /data/etcd/ca.pem << ETCD_CA_PEM_EOF
{{getv "/links/etcd_service/env/etcd_node/caPem" |base64Decode }}
ETCD_CA_PEM_EOF

flush /data/etcd/client-key.pem << ETCD_CK_PEM_EOF
{{getv "/links/etcd_service/env/etcd_node/clientKeyPem" |base64Decode }}
ETCD_CK_PEM_EOF

flush /data/etcd/client.pem << ETCD_CLIENT_PEM_EOF
{{getv "/links/etcd_service/env/etcd_node/clientPem" |base64Decode }}
ETCD_CLIENT_PEM_EOF
{{ end }}
{{ end }}

flush /opt/app/current/conf/k8s/kubeadm.conf << KUBEADM_CONFIG_EOF
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: v$K8S_VERSION
controlPlaneEndpoint: loadbalancer
imageRepository: $GCR_MIRROR
useHyperKubeImage: false
etcd:
  external:
    endpoints:
    {{- if not (exists "/links/etcd_service/env/etcd_node/enable_TLS") }}
    - http://127.0.0.1:2379
    {{- else }}
    {{- if (eq (getv "/links/etcd_service/env/etcd_node/enable_TLS") "true")}}
    {{- range getvs "/links/etcd_service/hosts/etcd_node/*/sid" }}
    - https://etcd{{ . }}{{ getv (printf "/links/etcd_service/env/etcd_proxy/cluster_DNS") }}:2379
    {{- end }}
    caFile: /data/etcd/ca.pem
    certFile: /data/etcd/client.pem
    keyFile: /data/etcd/client-key.pem
    {{- else }}
    {{- range getvs "/links/etcd_service/hosts/etcd_node/*/ip" }}
    - http://{{ . }}:2379
    {{- end }}
    {{- end }}
    {{- end }}
dns:
  imageRepository: coredns
  imageTag: $COREDNS_VERSION
apiServer:
  certSANs:
  {{- with join (getvs "/env/kubernetes_eip") "" }}
  - {{ . }}
  {{- end }}
  $(test -z "$lbEip" || echo -n "- $lbEip # Load Balancer IP (Public)")
  $(test -z "$lbIp" || echo -n "- $lbIp # Load Balancer IP (Private)")
  extraArgs:
    service-node-port-range: {{ getv "/env/cluster_port_range" "30000-32767" }}
    advertise-address: 0.0.0.0
    {{- if $kubeAuditPolicy }}
    audit-policy-file: $KUBE_AUDIT_POLICY_RUNTIME_FILE
    {{- if $kubeAuditWebhook }}
    audit-webhook-config-file: $KUBE_AUDIT_WEBHOOK_RUNTIME_FILE
    {{- end }}
    audit-log-maxage: "{{ getv "/env/keep_audit_days" }}"
    audit-log-path: /etc/kubernetes/audit/logs/audit.log
    audit-log-maxsize: "{{ getv "/env/kube_audit_log_maxsize" "1" }}"
    audit-log-maxbackup: "{{ getv "/env/kube_audit_log_maxbackup" "100" }}"
    {{- end }}
    etcd-prefix: {{ getv "/cluster/cluster_id" }}
    v: "{{ getv "/env/kube_log_level" }}"
    {{ replace (replace (join (getvs "/env/apiserver.params") "") "\r" "" -1) "\n" "\n    " -1 }}
  {{- if $kubeAuditPolicy }}
  extraVolumes:
  - name: audit-policy
    hostPath: /etc/kubernetes/audit
    mountPath: /etc/kubernetes/audit
    pathType: DirectoryOrCreate
  {{- end }}
controllerManager:
  extraArgs:
    v: "{{ getv "/env/kube_log_level" }}"
    {{ replace (replace (join (getvs "/env/controller.manager.params") "") "\r" "" -1) "\n" "\n    " -1 }}
scheduler:
  extraArgs:
    v: "{{ getv "/env/kube_log_level" }}"
    {{ replace (replace (join (getvs "/env/scheduler.params") "") "\r" "" -1) "\n" "\n    " -1 }}
networking:
  dnsDomain: {{ getv "/env/api_external_domain" "cluster.local" }}
  {{- if $usingHostnic }}
  podSubnet: {{ $hostnicCidr }}
  {{- else }}
  podSubnet: {{ getv "/env/pod_subnet" "10.10.0.0/16" }}
  {{- end }}
  serviceSubnet: {{ $serviceSubnet }}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: {{ if $upgradedFromV1 }}cgroupfs{{ else }}systemd{{ end }}
imageGCHighThresholdPercent: 100
kubeReserved:
  cpu: 200m
  memory: 512M
systemReserved:
  cpu: 200m
  memory: 1Gi
systemReservedCgroup: /system.slice
enforceNodeAllocatable:
  - pods
  - system-reserved
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: {{ $proxyMode }}
{{- with (replace (join (getvs "/env/proxy.iptables.params") "") "\r" "" -1) }}
iptables:
  {{ replace . "\n" "\n  " -1 }}
{{- end }}
KUBEADM_CONFIG_EOF
