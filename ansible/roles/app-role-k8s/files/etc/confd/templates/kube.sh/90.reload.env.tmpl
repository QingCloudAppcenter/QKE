reloadConfFile=/opt/app/current/conf/k8s/reload.conf

flush $reloadConfFile << RELOAD_CONF_EOF
reloadHostnic={{ $hostnicMaxNics }}:{{ $hostnicVxnets }}:{{ $hostnicIPAM }}
reloadExternalElk={{ join (getvs "/links/elk_service/hosts/es_node*/*/ip") "," }}:{{ join (getvs "/links/elk_service/cluster/endpoints/ElasticSearch/port") "" }}
reloadKsEip={{ getv "/env/kubesphere_eip" "" }}
reloadKsConf={{ join (getvs "/links/etcd_service/hosts/etcd_node/*/ip") "," }}:{{ join (getvs "/env/extra.modules") "" }}
reload:kubelet={{ if $usingHostnic }}{{ $hostnicMaxNics }}{{ else }}{{ getv "/env/max_pods" "120" }}{{ end }}:{{ replace (replace (join (getvs "/env/kubelet.params") "") "\n" "" -1) "\r" "" -1 }}:{{ $gpuOnly }}
reloadKubeApiserverCerts={{ join (getvs "/env/kubernetes_eip") "" }}
reloadKubeProxy={{ replace (replace (join (getvs "/env/proxy.iptables.params") "") "\n" "" -1) "\r" "" -1 }}
reloadKubeLogLevel={{ getv "/env/kube_log_level" "0" }}
reloadKubeMasterArgs:controller-manager={{ replace (replace (join (getvs "/env/controller.manager.params") "") "\n" "" -1) "\r" "" -1 }}
reloadKubeMasterArgs:scheduler={{ replace (replace (join (getvs "/env/scheduler.params") "") "\n" "" -1) "\r" "" -1 }}
reloadKubeMasterArgs:apiserver={{ replace (replace (join (getvs "/env/apiserver.params") "") "\n" "" -1) "\r" "" -1 }}:{{ join (getvs "/links/etcd_service/hosts/etcd_node/*/ip") "," }}:{{ getvs "/links/etcd_service/env/etcd_node/enable_TLS" }}:{{ not (len $kubeAuditPolicy) }}:{{ if len $kubeAuditPolicy }}{{ if len $kubeAuditWebhook }}{{ not (len $kubeAuditWebhook) }}{{ else }}{{ join (getvs "/env/kube_audit_log_*") ":" }}:{{ getv "/env/keep_audit_days" "3" }}:{{ end }}{{ end }}
reloadKubeMasterProcs:apiserver={{ join (getvs "/env/kubernetes_eip") "" }}:{{ replace (replace $kubeAuditPolicy "\n" "" -1) "\r" "" -1 }}:{{ replace (replace $kubeAuditWebhook "\n" "" -1) "\r" "" -1 }}
RELOAD_CONF_EOF

flush /opt/app/current/bin/envs/reload.env << RELOAD_CMD_EOF
RELOAD_COMMANDS="$(diff --unchanged-line-format= --old-line-format= --new-line-format='%L' $reloadConfFile.1 $reloadConfFile | cut -d= -f1 | xargs)"
RELOAD_CMD_EOF
