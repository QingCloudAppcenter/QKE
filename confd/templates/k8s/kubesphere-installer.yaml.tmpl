---
apiVersion: v1
data:
  ks-config.yaml: |
    kube_apiserver_host: {{range $dir := lsdir "/hosts/master/"}}{{$ip := printf "/hosts/master/%s/ip" $dir}}{{$sid := printf "/hosts/master/%s/sid" $dir}}{{if eq "1" (getv $sid)}}{{getv $ip}}{{end}}{{end}}
    etcd_tls_enable: False
    {{- with getvs "/links/etcd_service/hosts/etcd_node/*/ip" }}
    etcd_endpoint_ips: {{ join . "," }}
    {{- else }}
    etcd_endpoint_ips: {{ join (getvs "/hosts/master/*/ip") "," }}
    {{- end }}
    disableMultiLogin: True
    elk_prefix: "{{getv "/cluster/cluster_id"}}"
    {{- if exists "/links/elk_service/cluster/cluster_id"}}
    external_es_url: "external-elk.kube-system.svc"
    external_es_port: {{getv "/links/elk_service/cluster/endpoints/ElasticSearch/port"}}
    {{- end}}
    containersLogMountedPath: "/data/var/lib/docker/containers"
    keep_log_days: {{getv "/env/keep_log_days"}}
kind: ConfigMap
metadata:
  name: kubesphere-config
  namespace: kubesphere-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ks-installer
  namespace: kubesphere-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: ks-installer
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - tenant.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - certificates.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - devops.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - logging.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - jaegertracing.io
  resources:
  - '*'
  verbs:
  - '*'

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ks-installer
subjects:
- kind: ServiceAccount
  name: ks-installer
  namespace: kubesphere-system
roleRef:
  kind: ClusterRole
  name: ks-installer
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: batch/v1
kind: Job
metadata:
  name: kubesphere-installer
  namespace: kubesphere-system
spec:
  template:
    spec:
      serviceAccountName: ks-installer
      containers:
      - name: ansible
        command: ["ansible-playbook", "/usr/src/kubesphere/kubesphere.yaml", "-b", "-e", "@/usr/src/kubesphere/conf/ks-config.yaml"]
        image: "kubesphere/ks-installer:advanced-2.0.2"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
          - name: kubesphere-config
            mountPath: /usr/src/kubesphere/conf
      restartPolicy: OnFailure
      volumes:
        - name: kubesphere-config
          configMap:
            name: kubesphere-config