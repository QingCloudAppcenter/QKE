apiVersion: kubeadm.k8s.io/v1alpha3
kind: InitConfiguration
bootstrapTokens:
- ttl: "0"
nodeRegistration:
  kubeletExtraArgs:
    cgroup-driver: "cgroupfs"
    max-pods: "{{getv "/env/max_pods"}}"
    fail-swap-on: "true"
    root-dir: "/data/var/lib/kubelet"
    allow-privileged: "true"
    cloud-provider: "external"
    feature-gates: "KubeletPluginsWatcher=false,CSINodeInfo=false,CSIDriverRegistry=false"
    pod-infra-container-image: "dockerhub.qingcloud.com/google_containers/pause-amd64:3.1"
    v: "{{getv "/env/kube_log_level"}}"
---
apiVersion: kubeadm.k8s.io/v1alpha3
kind: ClusterConfiguration
etcd:
  external:
    endpoints:
{{if exists "/links/etcd_service/cluster/cluster_id"}}{{range $index,$value := gets "/links/etcd_service/hosts/etcd_node/*/ip"}}    - http://{{print .Value}}:2379
{{end}}{{else}}{{range $index,$value := gets "/hosts/master/*/ip"}}    - http://{{print .Value}}:2379
{{end}}{{end}}
networking:
  dnsDomain: "{{getv "/env/api_external_domain"}}"
  podSubnet: "{{getv "/env/pod_subnet"}}"
  serviceSubnet: "{{getv "/env/service_subnet"}}"
kubernetesVersion: "{{getv "/env/kubernetes_version"}}"
controlPlaneEndpoint: "{{if eq "3" (getv "/env/master_count")}}{{$role := getv "/host/role"}}{{if or (eq "client" $role) (eq "master" $role)}}SHOULD_BE_REPLACED{{else}}{{range $dir := lsdir "/hosts/client/"}}{{$ip := printf "/hosts/client/%s/token" $dir}}{{getv $ip}}{{end}}{{end}}{{else}}{{ join (getvs "/hosts/master/*/ip") "" }}{{end}}:6443"
apiServerCertSANs:
- "{{if eq "3" (getv "/env/master_count")}}loadbalancer{{else}}{{ join (getvs "/hosts/master/*/instance_id") "" }}{{end}}"
imageRepository: "dockerhub.qingcloud.com/google_containers"
unifiedControlPlaneImage: "dockerhub.qingcloud.com/google_containers/hyperkube-amd64:{{getv "/env/kubernetes_version"}}"
apiServerExtraArgs:
  service-node-port-range: "{{getv "/env/cluster_port_range"}}"
  insecure-port: "8080"
  feature-gates: "KubeletPluginsWatcher=false,CSINodeInfo=false,CSIDriverRegistry=false"
  v: "{{getv "/env/kube_log_level"}}"
controllerManagerExtraArgs:
  feature-gates: "KubeletPluginsWatcher=false,CSINodeInfo=false,CSIDriverRegistry=false"
  v: "{{getv "/env/kube_log_level"}}"
  cloud-provider: "external"
schedulerExtraArgs:
  feature-gates: "KubeletPluginsWatcher=false,CSINodeInfo=false,CSIDriverRegistry=false"
  v: "{{getv "/env/kube_log_level"}}"
certificatesDir: "/etc/kubernetes/pki"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "{{getv "/env/proxy_mode"}}"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
address: 0.0.0.0
apiVersion: kubelet.config.k8s.io/v1beta1
authentication:
  anonymous:
    enabled: true
  webhook:
    cacheTTL: 2m0s
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: AlwaysAllow
  webhook:
    cacheAuthorizedTTL: 5m0s
    cacheUnauthorizedTTL: 30s
