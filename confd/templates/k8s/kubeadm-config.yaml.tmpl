apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
bootstrapTokens:
- ttl: "0"
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
etcd:
  external:
    endpoints:
{{if exists "/links/etcd_service/cluster/cluster_id"}}{{range $index,$value := gets "/links/etcd_service/hosts/etcd_node/*/ip"}}    - http://{{print .Value}}:2379
{{end}}{{else}}{{range $index,$value := gets "/hosts/master/*/ip"}}    - http://{{print .Value}}:2379
{{end}}{{end}}
networking:
  dnsDomain: "{{getv "/env/api_external_domain"}}"
  podSubnet: "{{getv "/env/pod_subnet"}}"
  serviceSubnet: "{{getv "/env/service_subnet"}}"
kubernetesVersion: "{{getv "/env/kubernetes_version"}}"
controlPlaneEndpoint: "{{if eq "3" (getv "/env/master_count")}}{{$role := getv "/host/role"}}{{if or (eq "client" $role) (eq "master" $role)}}SHOULD_BE_REPLACED{{else}}{{range $dir := lsdir "/hosts/client/"}}{{$ip := printf "/hosts/client/%s/token" $dir}}{{getv $ip}}{{end}}{{end}}{{else}}{{ join (getvs "/hosts/master/*/ip") "" }}{{end}}:6443"
apiServer:
  certSANs:
  - "{{if eq "3" (getv "/env/master_count")}}loadbalancer{{else}}{{ join (getvs "/hosts/master/*/instance_id") "" }}{{end}}"
{{if ne "" (getv "/env/kubernetes_eip")}}  - "{{getv "/env/kubernetes_eip"}}"{{end}}  
certificatesDir: "/etc/kubernetes/pki"
imageRepository: "gcr.azk8s.cn/google_containers"
useHyperKubeImage: true
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "{{getv "/env/proxy_mode"}}"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration