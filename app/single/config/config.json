{
    "type": "array",
    "properties": [
      {
        "key": "cluster",
        "description": "Kubernetes properties",
        "type": "array",
        "properties": [
          {
            "key": "name",
            "label": "name",
            "description": "The name of the Kubernetes cluster",
            "type": "string",
            "default": "my k8s cluster",
            "required": "yes"
          },
          {
            "key": "description",
            "label":"description",
            "description": "Description of Kubernetes cluster",
            "type": "string",
            "default": "my k8s cluster",
            "required": "yes"
          },
          {
            "key": "resource_group",
            "label": "Resource Configuration",
            "description": "The resource configuration of the service",
            "type": "string",
            "default": "Basic",
            "range": ["Basic", "Premium"]
          },
          {
            "key": "vxnet",
            "label": "VxNet",
            "description": "Choose a vxnet to join",
            "type": "string",
            "default": "",
            "required": "yes"
          },
          {
            "key": "elk_service",
            "label": "ELK service",
            "description": "Choose an ELK cluster to use if setting log node count to zero, leave empty if you choose not to use it, then you must specify address of Elastic Search server in environment properties",
            "type": "service",
            "tag": ["ELK", "elk"],
            "default": "",
            "required": "no"
          },
          {
            "key": "etcd_service",
            "label": "etcd service",
            "description": "Choose an etcd cluster to store Kubernetes cluster data, leave empty if you choose to use internal etcd service in Kubernetes cluster",
            "type": "service",
            "tag": ["ETCD", "etcd"],
            "default": "",
            "required": "no"
          },
          {
            "key": "master",
            "label": "master",
            "description": "master properties",
            "type": "array",
            "properties": [
              {
                "key": "cpu",
                "label": "CPU",
                "description": "CPUs of each node",
                "type": "integer",
                "default": 4,
                "range": [
                  2,
                  4,
                  8
                ],
                "required": "yes",
                "resource_group": [4, 8]
              },
              {
                "key": "memory",
                "label": "Memory",
                "description": "memory of each node (in MB)",
                "type": "integer",
                "default": 4096,
                "range": [
                  2048,
                  4096,
                  8192
                ],
                "required": "yes",
                "resource_group": [4096, 8192]
              },
              {
                "key": "count",
                "label": "count",
                "description": "Number of master for the cluster to create",
                "type": "integer",
                "default": 1,
                "min":1,
                "max":1,
                "required": "yes"
              },
              {
                "key": "instance_class",
                "label": "resource type",
                "description": "The instance type for the cluster to run, such as high performance, high performance plus",
                "type": "integer",
                "default": 1,
                "range": [
                  0,
                  1
                ],
                "required": "yes",
                "resource_group": [0, 1]
              },
              {
                "key": "volume_size",
                "label": "volume size",
                "description": "The volume size for each instance",
                "type": "integer",
                "default": 20,
                "min": 10,
                "max": 1000,
                "step": 10,
                "required": "yes"
              }
            ]
          },
          {
            "key": "node",
            "label": "node",
            "description": "node properties",
            "type": "array",
            "properties": [
              {
                "key": "cpu",
                "label": "CPU",
                "description": "CPUs of each node",
                "type": "integer",
                "default": 4,
                "range": [
                  2,
                  4,
                  8,
                  12,
                  16
                ],
                "required": "yes"
              },
              {
                "key": "memory",
                "label": "Memory",
                "description": "memory of each node (in MB)",
                "type": "integer",
                "default": 2048,
                "range": [
                  2048,
                  4096,
                  8192,
                  16384,
                  24576,
                  32768,
                  49152,
                  65536
                ],
                "required": "yes"
              },
              {
                "key": "count",
                "label": "count",
                "description": "Number of nodes for the cluster to create",
                "type": "integer",
                "default": 1,
                "min":0,
                "max":100,
                "required": "yes",
                "resource_group": [2, 0]
              },
              {
                "key": "volume_size",
                "label": "volume size",
                "description": "The volume size for each instance",
                "type": "integer",
                "default": 50,
                "min": 10,
                "max": 1000,
                "step": 10,
                "required": "yes"
              }
            ]
          },
          {
            "key": "ssd_node",
            "label": "ssd",
            "description": "ssd node properties",
            "type": "array",
            "properties": [
              {
                "key": "cpu",
                "label": "CPU",
                "description": "CPUs of each node",
                "type": "integer",
                "default": 4,
                "range": [
                  2,
                  4,
                  8,
                  12,
                  16
                ],
                "required": "yes"
              },
              {
                "key": "memory",
                "label": "Memory",
                "description": "memory of each node (in MB)",
                "type": "integer",
                "default": 4096,
                "range": [
                  2048,
                  4096,
                  8192,
                  16384,
                  24576,
                  32768,
                  49152,
                  65536
                ],
                "required": "yes"
              },
              {
                "key": "count",
                "label": "count",
                "description": "Number of nodes for the cluster to create",
                "type": "integer",
                "default": 0,
                "min":0,
                "max":100,
                "required": "yes",
                "resource_group": [0, 2]
              },
              {
                "key": "volume_size",
                "label": "volume size",
                "description": "The volume size for each instance",
                "type": "integer",
                "default": 50,
                "min": 10,
                "max": 1000,
                "step": 10,
                "required": "yes"
              }
            ]
          },
          {
            "key": "log",
            "label": "log",
            "description": "log properties",
            "type": "array",
            "properties": [
              {
                "key": "cpu",
                "label": "CPU",
                "description": "CPUs of each node",
                "type": "integer",
                "default": 4,
                "range": [
                  2,
                  4,
                  8,
                  16
                ],
                "required": "yes"
              },
              {
                "key": "memory",
                "label": "Memory",
                "description": "memory of each node (in MB)",
                "type": "integer",
                "default": 4096,
                "range": [
                  2048,
                  4096,
                  8192,
                  16384,
                  32768
                ],
                "required": "yes"
              },
              {
                "key": "count",
                "label": "count",
                "description": "Number of log nodes for the cluster to create, set it to zero if you want to use external ELK service",
                "type": "integer",
                "default": 0,
                "range":[0,2,3,4,5],
                "required": "yes"
              },
              {
                "key": "instance_class",
                "label": "resource type",
                "description": "The instance type for the cluster to run, such as high performance, high performance plus",
                "type": "integer",
                "default": 0,
                "range": [
                  0,
                  1
                ],
                "required": "yes",
                "resource_group": [0, 1]
              },
              {
                "key": "volume_size",
                "label": "volume size",
                "description": "The volume size for each instance",
                "type": "integer",
                "default": 100,
                "min": 50,
                "max": 1000,
                "step": 10,
                "required": "yes"
              }
            ]
          },
          {
            "key": "client",
            "label": "client",
            "description": "client properties",
            "type": "array",
            "properties": [
              {
                "key": "cpu",
                "label": "CPU",
                "description": "CPUs of each node",
                "type": "integer",
                "default": 1,
                "range": [
                  1,
                  2
                ],
                "required": "yes"
              },
              {
                "key": "memory",
                "label": "Memory",
                "description": "memory of each node (in MB)",
                "type": "integer",
                "default": 1024,
                "range": [
                  1024,
                  2048
                ],
                "required": "yes"
              },
              {
                "key": "instance_class",
                "label": "resource type",
                "description": "The instance type for the cluster to run, such as high performance, high performance plus",
                "type": "integer",
                "default": 0,
                "range": [
                  0,
                  1
                ],
                "required": "yes"
              }
            ]
          }
        ]
      },
      {
        "key": "env",
        "description": "application configuration properties",
        "type": "array",
        "properties": [
          {
            "key": "access_key_id",
            "label": "Access key id",
            "description": "API access key id",
            "type": "string",
            "pattern": "^[A-Z]{20}$",
            "required": "yes"
          },
          {
            "key": "secret_access_key",
            "label": "Secret access key",
            "description": "API secret access key",
            "type": "password",
            "pattern": "^[A-Za-z0-9]{40}$",
            "required": "yes"
          },
          {
            "key": "api_external_domain",
            "label": "Api External Domain",
            "description": "The domain of the Kubernetes api server",
            "type": "string",
            "default": "k8s.cluster.local",
            "changeable": false,
            "required": "no"
          },
          {
            "key": "cluster_port_range",
            "label": "Port range of each node",
            "description": "A port range to reserve for services with NodePort visibility. Example: '30000-32767'. Inclusive at both ends of the range.",
            "type": "string",
            "default": "30000-32767",
            "changeable": false,
            "required": "no"
          },
          {
            "key": "max_pods",
            "label": "max-pods",
            "description": "Number of Pods that can run on each working node/kubelet",
            "type": "integer",
            "changeable": true,
            "default": 60,
            "range":[60,80,100,120,150,180,240],
            "required": "no"
          },
          {
            "key": "network_plugins",
            "label": "network plugins",
            "description": "Choose one network plugins",
            "type": "string",
            "changeable": false,
            "default": "calico",
            "range":["calico","flannel","hostnic"],
            "required": "no"
          },
          {
            "key": "pod_vxnets",
            "label": "Pod vxnets",
            "description": "The vxnets for Kubernetes pod, use a blank to split multi vxnet",
            "type": "string",
            "changeable": true,
            "pattern":"^vxnet\\-[a-z0-9]{5,10}(\\svxnet\\-[a-z0-9]{5,10})*$",
            "required": "yes"
          },
          {
            "key": "registry-mirrors",
            "label": "Registry mirrors",
            "description": "The docker hub registry mirror, use a blank to split multi registry",
            "type": "string",
            "default": "https://registry.docker-cn.com",
            "required": "no"
          },
          {
            "key": "insecure-registries",
            "label": "Insecure registries",
            "description": "The insecure docker registries, use a blank to split multi registry",
            "type": "string",
            "default": "",
            "required": "no"
          },
          {
            "key": "private-registry",
            "label": "Private registry",
            "description": "The URL of private docker registry",
            "type": "string",
            "default": "",
            "required": "no"
          },
          {
            "key": "dockerhub_username",
            "label": "Username of docker registry",
            "description": "The username of docker registry, could be dockerhub.qingcloud.com or your private registry",
            "type": "string",
            "default": "",
            "changeable": true,
            "required": "no"
          },
          {
            "key": "dockerhub_password",
            "label": "Password of docker registry",
            "description": "The password of docker registry",
            "type": "password",
            "default": "",
            "changeable": true,
            "required": "no"
          },
          {
            "key": "docker_bip",
            "label": "IP address and netmask for docker bridge network",
            "description": "IP address and netmask for docker bridge network, using standard CIDR notation. For example: 192.168.1.5/24",
            "type": "string",
            "default": "172.30.0.1/16",
            "changeable": true,
            "required": "no"
          },
          {
            "key": "keep_log_days",
            "label": "Keep log days",
            "description": "Keep log on log node for x days, 0 indicates that the log is not cleared",
            "type": "integer",
            "default": 3,
            "min":0,
            "max":30,
            "changeable": true,
            "required": "no"
          },
          {
            "key": "kube_log_level",
            "label": "Kubernetes log level",
            "description": "The log level for Kubernetes system",
            "type": "integer",
            "default": 0,
            "min":0,
            "max":10,
            "changeable": true,
            "required": "no"
          },
          {
            "key": "fluent_forward_server",
            "label": "Fluent forward server",
            "description": "The fluent log server address to forward server, format host:port",
            "type": "string",
            "changeable": true,
            "default":"",
            "pattern":"^$|^[^\\:]+:[0-9]{1,5}$",
            "required": "no"
          },
          {
            "key": "es_server",
            "label": "Elastic Search server",
            "description": "The Elastic Search server address, format host:port",
            "type": "string",
            "changeable": true,
            "default":"",
            "pattern":"^$|^[^\\:]+:[0-9]{1,5}$",
            "required": "no"
          },
          {
            "key": "enable_istio",
            "label": "Enable istio",
            "description": "Enable service mesh platform istio",
            "type": "string",
            "changeable": true,
            "default":"no",
            "range":["yes", "no"],
            "required": "no"
          },
          {
            "key": "enable_helm",
            "label": "Enable Helm",
            "description": "Enable kubernetes pakcage manager Helm",
            "type": "string",
            "changeable": true,
            "default":"yes",
            "range":["yes", "no"],
            "required": "no"
          }
        ]
      }
    ]
  }